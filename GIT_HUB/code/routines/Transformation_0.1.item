package routines;

import java.util.Arrays;
import java.util.List;
import org.apache.commons.lang.WordUtils;



/*
 * user specification: the function's comment should contain keys as follows: 1. write about the function's comment.but
 * it must be before the "{talendTypes}" key.
 * 
 * 2. {talendTypes} 's value must be talend Type, it is required . its value should be one of: String, char | Character,
 * long | Long, int | Integer, boolean | Boolean, byte | Byte, Date, double | Double, float | Float, Object, short |
 * Short
 * 
 * 3. {Category} define a category for the Function. it is required. its value is user-defined .
 * 
 * 4. {param} 's format is: {param} <type>[(<default value or closed list values>)] <name>[ : <comment>]
 * 
 * <type> 's value should be one of: string, int, list, double, object, boolean, long, char, date. <name>'s value is the
 * Function's parameter name. the {param} is optional. so if you the Function without the parameters. the {param} don't
 * added. you can have many parameters for the Function.
 * 
 * 5. {example} gives a example for the Function. it is optional.
 */
public class Transformation {

    /**
     * getKeyPairValue: .
     * 
     * 
     * {talendTypes} String
     * 
     * {Category} User Defined
     * 
     * {param} getKeyPairValue(keyList,valueList,key)
     * 
     * {example} getKeyPairValue("nom,prenom","cyril,sonnefraud","prenom") # cyril
     */
    public static String getKVValue(String keyList, String valueList, String key) {
    	
    	// /!\ Assumes the delimiter is ';' !!!
        
    	List<String> keysArray = Arrays.asList(keyList.split(";"));
    	List<String> valuesArray = Arrays.asList(valueList.split(";"));
    	  	
    	for (int i=0; i<keysArray.size(); i++) {
    		if (key.equals(keysArray.get(i))){
    			return valuesArray.get(i);
    		}   
    	}
    
    	return null;
    }
   
    
    /**
     * toInitialCap: returns the first letter of every word in upper case
     * given strings is empty or null.
     * 
     * 
     * {talendTypes} String
     * 
     * {Category} Data Quality
     * 
     * {param} strings("hello world") input: The string to title cased (can be null).
     * 
     * {example} toInitialCap( "hello world  ") # Hello World.
     */

    public static String toInitialCap(String givenString) {
    	if (givenString == null) {
            return null;
    	}	
    	
        return WordUtils.capitalizeFully(givenString);
    }
}
    
    